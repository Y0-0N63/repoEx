p.18~19
HTML (Hyper Text Markup Language)
Hyper Text : 연관성이 있는 페이지 간 연결
  문서를 만들기 위한 표준화가 되어있음

Markup Language(HTML, XML) : <html>     </html>
 HTML : (구조, 데이터, UI) 컨텐츠+(표현(div, p, h1 등))
  "Element라는 이름으로 컨텐츠의 구성과 구조를 정의하는 것"
  컨텐츠(문서, UI)(실체)
  Element/구성
  Element의 구분 id(Only 1), class(group), tag(+속성)

CSS :  레이아웃을 다루기 위해+Selector를 위해 rule set을 정의함
  Layout+Selector+Rule Set
  "복잡한 형태"에 대한 규정 (화면에 보이는 실질적인 것들을 위한 규제)
  어떤 Element에 어떤 규정?
  대상을 찾아서 "지정"하여 규제를 걺->Selector의 중요성! (id, class, tag, property)

JavaScript : 동적 문서를 만들기 위해 생성됨
  DOM+Event+객체에 대한 개념(객체 배열 포함)+함수
  ㄴDOM의 생성으로 기능이 확장됨
  이벤트와 동작 (필연적 관계)을 위한 "대상"이 존재해야 지정할 수 있음
  ->document.queryselect(#id, .class 등 등)  : 다룰 수 있는 객체(대상)을 쥐여줌
       ㄴSelector의 중요성2 (특정한 객체 지정)
  이벤트 : 일어난 무언가+그리구 그 무언가가 먼가를 해야 한댕->이벤트 핸들러
    -이벤트 핸들러 붙일 수 있는 방법~ 
      1) tag 안에 onclick 붙이기 2) 객체 안에 onclick 붙이기 3) 객체에다 addEventListener() 붙이기
      *3번이 가장 좋대영 그렇대영
    ****함수로만 지정해야 함!!!****

☆☆
+)DOM : HTML의 컨텐츠를 객체화시켜 JS, CSS가 다룰 수 있도록 함
+)selector 함수 : CSS와 JS를 실체(HTML)을 연결해줌

p. 20~22
Markup의 특징->태그 (<div>   </div> 시작 태그와 끝 태그)
 태그의 구성 : <태그 속성='  '(Attribute) 태그의 값(value)*> 텍스트(Contents) </태그>
*값이 없는 속성도 존재 ex_Checked (Property라고 불림)
  =>자바스크립트로 다룰 때 True/False로 다뤄짐<->Attribute는 값으로 다뤄짐
*Class 속성 또한 특수하게 다뤄짐
class, attribute, value, text, property 다루는 객체 속성 정리하ㅣㄱ
DOM: 위에 다섯 개 다루깅.......

태그의 종류
 1) block : 한 줄 씩 차지  ex_div, p, h1...
 2) inline : 자신의 크기 만큼 차지 (한 줄에 여러 개 있을 수 있음)   ex_UI, span...
CSS가 없는 기본적인 랜더 방식 위에서 아래로, 왼쪽에서 오른쪽으로